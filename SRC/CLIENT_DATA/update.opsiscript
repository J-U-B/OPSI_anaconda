;======================================================================
; update.opsiscript ANACONDA
; 
; J. Boettge <boettge@mpi-halle.mpg.de>  2018-10-24 16:36:56 +0200
;======================================================================

;======================================================================
[Initial]
;======================================================================
setLogLevel=5
; Log Errors in Logfile and abort:
ExitOnError=true
; Show syntax errors in the script:
ScriptErrorMessages=off
; Dont trace step by step through the script:
TraceMode=off 
; Let started programs run in front of the winst window
StayOnTop=false 

;======================================================================
[Actions]
;======================================================================
include_insert "%ScriptPath%\product_variables.opsiinc"

if (not ($State$ = "installed")) AND ($ActionRequest$ = "update")
	logError "Can't perform update for " + $ProductName$ + " (" + $FullProductId$ + ") - product is not installed."
	isFatalError
endif

if FileExists("%ScriptPath%\add_packages.opsiinc")
	include_append "%ScriptPath%\add_packages.opsiinc"
	set $Has_AddPackages$ = "true"
else
	logError "File not found: add_packages.opsiinc"
	set $Has_AddPackages$ = "false"
endif



;if ($pr_SkipUpdate$ = "true")
;	Message "Update skipped by property"
;else
	if not (FileExists($ActivateBat$))
		logError "Can't find " + $ActivateBat$
		isFatalError "activate.bat not found"
	endif	

	;=== let's go
	marktime
	
	if (($pr_AddPack_InstallMode$ = "update") AND ($Has_AddPackages$ = "true"))
		Sub_Add_Packages
		set $TimeDiff$ = getDiffTimeSec
		comment  "Elapsed time after adding packages: " + $TimeDiff$ + " seconds"
	endif

	ShowBitmap $Img_Prepare$ $ProductName$

	set $CondaOpts$ = ""
	if ($pr_VerboseUpdate$ = "true")
		set $CondaOpts$ = $CondaOpts$ + " -v"
	endif
	if ($pr_DryUpdate$ = "true")
		set $CondaOpts$ = $CondaOpts$ + " --dry-run"
	endif
	
	;=== get current anaconda version (BEFORE update)
	set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_get_anaconda_version')
	set $ExitCode$ = getLastExitCode
	if ($ExitCode$ = "0")
		set $Str$=takeString("-1",$ResultList$)
		if not ($Str$ = "")
			set $ResultList$ = splitString($Str$, "=")
			set $Ver_anaconda$ = takeString("1", $ResultList$)
			set $Ver_python$   = takeString("2", $ResultList$)
			set $Ver_pre$      = "Anaconda: [" + $Ver_anaconda$ + "], Python: [" + $Ver_python$ + "]"
		else
			set $Ver_pre$      = "Anaconda: [???], Python: [???]"
		endif
	else
		LogWarning "Can't detect Anaconda version in shell!"
		set $Ver_pre$          = "Anaconda: [???], Python: [???]"
	endif	
	
	;=== run upgrade?
	if ($pr_ReleaseUpgrade$ = "True")
		ShowBitmap $Img_Upgrade$ $ProductName$
		Message $ProductName$ + " " + $Version$+ " (" + $sw_arch$ + " bit) - performing UPGRADE"
		setLogLevel = 7
		set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_conda_upgrade')
		setlogLevel = $LogLevelDefault$
		set $ExitCode$ = getLastExitCode
		comment "Upgrade returned exit code " + $ExitCode$
		set $TimeDiff$ = getDiffTimeSec
		comment  "Elapsed upgrade time: " + $TimeDiff$ + " seconds"	
		
		;=== get current anaconda version (AFTER UPGRADE)
		set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_get_anaconda_version')
		set $ExitCode$ = getLastExitCode
		if ($ExitCode$ = "0")
			set $Str$=takeString("-1",$ResultList$)
			if not ($Str$ = "")
				set $ResultList$ = splitString($Str$, "=")
				set $Ver_anaconda$ = takeString("1", $ResultList$)
				set $Ver_python$   = takeString("2", $ResultList$)
				set $Ver_post$     = "Anaconda: [" + $Ver_anaconda$ + "], Python: [" + $Ver_python$ + "]"
			else
				set $Ver_post$     = "Anaconda: [???], Python: [???]"
			endif
		else
			LogWarning "Can't detect Anaconda version in shell!"
			set $Ver_post$         = "Anaconda: [???], Python: [???]"
		endif
		comment "Version BEFORE UPGRADE: " + $Ver_pre$
		comment "Version AFTER UPGRADE : " + $Ver_post$		
		set $Ver_pre$ = $Ver_post$
	endif
	

	;=== run update
	ShowBitmap $Img_Update$ $ProductName$
	Message $ProductName$ + " " + $Version$+ " (" + $sw_arch$ + " bit) - performing update"
	setLogLevel = 7
	set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_conda_update')
	setlogLevel = $LogLevelDefault$
	set $ExitCode$ = getLastExitCode
	comment "Update returned exit code " + $ExitCode$
	set $TimeDiff$ = getDiffTimeSec
	comment  "Elapsed update time: " + $TimeDiff$ + " seconds"

	;=== run cleanup
	Message "Running conda cleanup for " + $ProductName$ + " " + $Version$+ " (" + $sw_arch$ + " bit)"
	setLogLevel = 7
	set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_conda_clean')
	setlogLevel = $LogLevelDefault$
	set $ExitCode$ = getLastExitCode
	comment "Conda clean returned exit code " + $ExitCode$
	set $TimeDiff$ = getDiffTimeSec
	comment  "Elapsed time after cleanup: " + $TimeDiff$ + " seconds"
	
	;=== get current anaconda version (AFTER update)
	set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_get_anaconda_version')
	set $ExitCode$ = getLastExitCode
	if ($ExitCode$ = "0")
		set $Str$=takeString("-1",$ResultList$)
		if not ($Str$ = "")
			set $ResultList$ = splitString($Str$, "=")
			set $Ver_anaconda$ = takeString("1", $ResultList$)
			set $Ver_python$   = takeString("2", $ResultList$)
			set $Ver_post$     = "Anaconda: [" + $Ver_anaconda$ + "], Python: [" + $Ver_python$ + "]"
		else
			set $Ver_post$     = "Anaconda: [???], Python: [???]"
		endif
	else
		LogWarning "Can't detect Anaconda version in shell!"
		set $Ver_post$         = "Anaconda: [???], Python: [???]"
	endif
	
	comment "Version BEFORE UPDATE: " + $Ver_pre$
	comment "Version AFTER UPDATE : " + $Ver_post$

	;=== fix for update (rights inheritance):
	if ($pr_SkipFixRights$ = "false")
		Message "Updating access rights for " + $ProductName$
		setLogLevel = 7
		set $ResultList$ = getOutStreamFromSection('ShellInAnIcon_fix_rights')
		setlogLevel = $LogLevelDefault$
		set $ExitCode$ = getLastExitCode
		comment "Fix rights returned exit code " + $ExitCode$
	else
		logWarning "Skipping repair of access rights by property."
	endif

	;=== finally measure installation time
	set $TimeDiff$ = getDiffTimeSec
	Message  "Total update time: " + $TimeDiff$ + " seconds"
;endif

;=====================================================================
[ShellInAnIcon_conda_upgrade]
;=====================================================================
"$ActivateBat$" "$InstallDir$." && $CondaUpgradeCmd$ $CondaOpts$
exit %ERRORLEVEL%

;=====================================================================
[ShellInAnIcon_conda_update]
;=====================================================================
"$ActivateBat$" "$InstallDir$." && $CondaUpdateCmd$ $CondaOpts$
exit %ERRORLEVEL%

;=====================================================================
[ShellInAnIcon_conda_clean]
;=====================================================================
"$ActivateBat$" "$InstallDir$." && $CondaCleanCmd$ $CondaOpts$
exit %ERRORLEVEL%

;=====================================================================
[ShellInAnIcon_get_anaconda_version]
;=====================================================================
"$ActivateBat$" "$InstallDir$." && conda list --export anaconda | find "anaconda="
exit %ERRORLEVEL%

;=====================================================================
[ShellInAnIcon_fix_rights]
;=====================================================================
icacls "$InstallDir$\*" /inheritance:e /T /C /L /Q
exit %ERRORLEVEL%

